<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portfolio Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="holding_styles.css">
    <style>
        body {
            background-color: #121212;
            color: #ffffff;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .bg-dark-3 {
            background-color: #252525;
        }

        .text-info {
            color: #dbe1daf1 !important;
        }

        .text-info1 {
            color: #31d400cd !important;
        }

        .text-danger {
            color: #f44336 !important;
        }

        .text-success {
            color: #4caf50 !important;
        }

        .fa-solid {
            margin-right: 8px;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .fade-in {
            animation: fadeIn 0.5s ease-out;
        }

        /* Spinner Styles */
        .spinner-container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .spinner-border {
            width: 3rem;
            height: 3rem;
            border-width: 0.3em;
        }
    </style>
</head>
<body>
    <div class="container py-5">
        <div class="row text-center mb-4">
            <div class="col-12 col-md-4 mb-4 mb-md-0">
                <div class="p-3 bg-dark-3 rounded shadow-sm">
                    <p>Invested</p>
                    <h2 id="totalInvested" class="text-info">$ 0</h2>
                </div>
            </div>
            <div class="col-12 col-md-4 mb-4 mb-md-0">
                <div class="p-3 bg-dark-3 rounded shadow-sm">
                    <p>Current</p>
                    <h2 id="totalCurrent" class="text-info1">$ 0</h2>
                </div>
            </div>
            <div class="col-12 col-md-4">
                <div class="p-3 bg-dark-3 rounded shadow-sm">
                    <p>Total return</p>
                    <h2 id="totalReturn" class="text-danger">0</h2>
                </div>
            </div>
        </div>

        <div id="holdingsContainer">
            <!-- Spinner will be shown here initially -->
            <div id="spinner" class="spinner-container">
                <div class="spinner-border" role="status"></div>
                <p class="ms-3">Loading...</p>
            </div>
        </div>
    </div>

    <script>
        window.addEventListener('load', () => {
            updatePortfolio();
        });

        function updatePortfolio() {
            fetch('/holdings/data')
                .then(response => response.json())
                .then(data => {
                    // Hide the spinner
                    document.getElementById('spinner').style.display = 'none';

                    // Update the portfolio data
                    document.getElementById('totalInvested').innerText = `$ ${data.totalInvested}`;
                    document.getElementById('totalCurrent').innerText = `$ ${data.totalCurrent}`;
                    document.getElementById('totalReturn').innerText = `${data.totalReturn >= 0 ? '+' : ''}${data.totalReturn} (${data.totalReturnPercentage}%)`;
                    document.getElementById('totalReturn').className = data.totalReturn >= 0 ? 'text-success' : 'text-danger';

                    const holdingsContainer = document.getElementById('holdingsContainer');
                    holdingsContainer.innerHTML = '';  // Clear existing holdings
                    data.holdings.forEach(holding => {
                        const holdingElement = document.createElement('div');
                        holdingElement.className = 'card bg-dark-3 text-light mb-3 fade-in';
                        holdingElement.innerHTML = `
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-center flex-wrap">
                                    <div>
                                        <h5 class="card-title mb-2">${holding.stock_name}</h5>
                                        <p class="mb-1"><i class="fa-solid fa-coins"></i> Invested: $${holding.invested}</p>
                                        <p class="mb-1"><i class="fa-solid fa-layer-group"></i> Qty: ${holding.quantity}</p>
                                        <p class="mb-1"><i class="fa-solid fa-chart-line"></i> Avg. Price: $${holding.average_price}</p>
                                    </div>
                                    <div class="text-end">
                                        <p class="mb-1"><i class="fa-solid fa-chart-bar"></i> Current Value: $${(holding.quantity * holding.current_price).toFixed(2)}</p>
                                        <p class="${holding.current_return >= 0 ? 'text-success' : 'text-danger'}">
                                            <i class="fa-solid ${holding.current_return >= 0 ? 'fa-arrow-trend-up' : 'fa-arrow-trend-down'}"></i> 
                                            Total Return: ${holding.current_return >= 0 ? '+' : ''}${holding.current_return.toFixed(2)} 
                                            (${holding.current_return_percentage.toFixed(2)}%)
                                        </p>
                                    </div>
                                </div>
                            </div>
                        `;
                        holdingsContainer.appendChild(holdingElement);
                    });
                })
                .catch(error => {
                    console.error('Error fetching portfolio data:', error);
                    // Hide the spinner on error
                    document.getElementById('spinner').style.display = 'none';
                });
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
</body>
</html>
